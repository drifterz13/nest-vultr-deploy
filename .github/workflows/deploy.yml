name: Deploy to VPS

on:
  push:
    branches:
      - main  # Trigger the workflow on pushes to the main branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # 1. Checkout the latest code
    - name: Checkout code
      uses: actions/checkout@v3

    # 2. Set up Docker
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # 3. Build and push Docker image
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile.prod
        push: true
        tags: drifterz13/nest-vultr-deploy:${{ github.sha }}
        cache-from: type=registry,ref=drifterz13/nest-vultr-deploy:latest
        cache-to: type=inline
        
    # 4. SSH into the VPS
    - name: SSH to VPS, deploy, and health check
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USER }}
        key: ${{ secrets.VPS_PRIVATE_KEY }}
        script: |
          cd ~/nest-vultr-deploy
          git pull origin main
          export IMAGE_TAG=${{ github.sha }}

          # Create log volume if it doesn't exist
          docker volume create --name=api_logs || true
          
          # Create network if it doesn't exist
          docker network create apps_network || true

          # Pull and start the main application
          docker compose -f compose.prod.yml pull
          docker compose -f compose.prod.yml up -d --build

          # Wait for 10 seconds
          sleep 10

          # Initialize the monitoring stack
          cd ./monitoring
          docker compose pull
          docker compose up -d --build

          # Clean up unused images
          docker image prune -af
